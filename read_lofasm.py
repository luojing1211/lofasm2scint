from lofasm.bbx import bbx 
import re 
from bbx_2_scint import BbxReader, Bbx2Scint, BbxStreamReader 
from incohr_dedisps import IncoherentDedisperse
from subband import SubBand
import astropy.units as u
import matplotlib.pyplot as plt
from scintillometry.dm import DispersionMeasure

#a = re.compile(r'.*?\((.*?)\)')
#r = a.search("asef (sefes)")
#print(r.group(0))
dm = DispersionMeasure(20)

f = ['20190401_001216_AA.bbx', '20190401_001720_AA.bbx', '20190401_002223_AA.bbx']


#f = Bbx2Scint("20190401_001216_AA.bbx")
bsr = BbxStreamReader(f)
print(bsr.shape)
data = bsr.read(1)
print(data.max(), data.min())
bsr.seek(3)
data = bsr.read(1)
print(data.max(), data.min())
bsr.seek(0)
data = bsr.read(1)
print(data.max(), data.min())
#data = bsr.fh.read(3615)
#print(data.shape)
#print(bsr.fh.size)
#print(bsr._file_offsets)
#print(bsr.file_nr)
#print(bsr.tell())
#print(bsr.seek(3615))
#print(bsr.tell())
#print(bsr.file_nr)
#print(bsr.fh.tell())
#print("File time offset:", bsr.fh.tell(unit='time').mjd)
#print("Stream time offset:", bsr.tell(unit='time').mjd)
#print(bsr.tell(unit=u.s))
#f0 = bsr.opener(f[0], mode='rb')
#f1 = bsr.opener(f[1], mode='rb')
#f2 = bsr.opener(f[2], mode='rb')
#print("F0 START:", f0.start_time.mjd)
#print("F0 STOP:", f0.stop_time.mjd)
#print("F1 START:", f1.start_time.mjd)
#bsr.seek(0)
#dd = bsr.read(3700)
#print(bsr.tell())
#print(dd.shape)

#br = BbxReader(f[0])
#print(br.stop_time.mjd)
#bsr.seek(br.shape[0])
#print(bsr.tell(unit='time').mjd)
#bsr.seek(br.shape[0]+1)
#print(bsr.tell(unit='time').mjd)
#print(BbxReader(f[1]).start_time.mjd)

#print(f.shape)
#print(f.start_time.isot)
#print(f.frequency)
#print(f.sample_rate)
#print(1/f.sample_rate)
#br = BbxReader(f)
#print(br.shape)
#print(br.tell())
sb = SubBand(bsr, 1, 20 * u.MHz, 50 * u.MHz)
#print((bsr.frequency.max() - bsr.frequency.min()) / (len(bsr.frequency)-1))
#print((sb.frequency.max() - sb.frequency.min()) / (len(sb.frequency)-1))
#print(sb.frequency.max(), sb.frequency[-1])
#print(sb.frequency.min(), sb.frequency[0])
#print(sb.frequency[2] - sb.frequency[1])
#print(len(sb.frequency))
#time_d = dm.time_delay(sb.frequency, sb.frequency[-1])
#print(sb.sample_rate)
#print((time_d * sb.sample_rate).decompose())
#sbd = sb.read(4000)
#print(sbd.shape)
#print(sb.frequency)
#print(sbd.shape)
#print(sb.samples_per_frame)
id = IncoherentDedisperse(sb, 20)
print("pad start", id.pad_start)
print("pad end", id.pad_end)
#print("samples_pre_frame", id.samples_per_frame)
#id.seek(3614)
data = id.read(1)
#data2 = id.read(1)
#print("Frame number", data.shape)
print(id.delay_high_index)
print(id.delay_low_index)
#isb
#print(dir(id))
#print(id._pad_slice)
#print(id.start_time)
#print(id._sample_offset)
#print(id.shape)
#print(bsr.shape)
#print(id._padded_samples_per_frame)
#id.seek(1)
#data = id.read(1)
#print("offset", id.offset)
#date = id.read(1)
#for i in range(3):
#    print(id.ih.tell())
#    data = id.read(1)
#    print(data.shape)
    
#print(data.shape)
#print(id.delay_low_index)
#print(id.delay_high_index)
#print(id.samples_per_frame)
#print(sb.samples_per_frame)
#print(br.tell())
#print(br.tell(unit='time'))
#print(br.frequency)
